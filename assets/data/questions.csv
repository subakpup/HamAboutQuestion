title,type,select1,select2,select3,select4,answer,img,level,date,recommenddate,update,description,solveddate,tag
MVC 패턴에서 Model이 View에 직접 접근해서 데이터를 변경하는 방식은 왜 문제가 될 수 있는지 설명하시오.,주관식,,,,,"재사용성과 확장성이 떨어지고, UI와 비즈니스 로직이 섞여 테스트와 유지보수가 어렵습니다.",,0,2025-10-02,2025-10-02,2025-10-02,,,MVC
"웹 애플리케이션에서 로그인 요청이 들어왔을 때, MVC 패턴의 흐름을 순서대로 설명해보시오.",주관식,,,,,View → Front Controller → Controller → Model(Service/DAO) → Controller → View,,0,2025-10-02,2025-10-02,2025-10-02,,,MVC
아래 설명 중 MVC 패턴의 장점으로 적절하지 않은 것은?,객관식,관심사 분리로 코드 유지보수가 용이하다.,모든 컴포넌트가 강하게 결합되어 성능이 보장된다.,로직과 화면이 분리되어 재사용성이 높아진다.,팀 협업 시 역할 분담이 명확하다.,모든 컴포넌트가 강하게 결합되어 성능이 보장된다.,,0,2025-10-02,2025-10-02,2025-10-02,,,MVC
MVC 패턴에서 Controller의 올바른 설명을 고르시오.,객관식,데이터베이스 연결과 데이터 저장을 담당한다.,"사용자의 요청을 받고, 적절한 Model을 호출하고, 결과를 View에 전달한다.",화면 렌더링을 전담한다.,"정적 리소스(css, js)를 관리한다.","사용자의 요청을 받고, 적절한 Model을 호출하고, 결과를 View에 전달한다.",,0,2025-10-02,2025-10-02,2025-10-02,,,MVC
MVC 패턴에서 Model의 주된 역할은 무엇인가?,객관식,사용자 입력을 처리한다.,사용자에게 화면(UI)을 보여준다.,"데이터를 저장, 가공, 비즈니스 로직을 처리한다.",요청을 받아 다른 컴포넌트로 전달한다.,"데이터를 저장, 가공, 비즈니스 로직을 처리한다.",,0,2025-10-02,2025-10-02,2025-10-02,,,MVC
Controller가 User 객체를 request 객체에 담아 userView.jsp 로 forwarding 했습니다. JSP 뷰의 출력 결과로 올바른 것은?,객관식,사용자 이름: Kim,"사용자 이름: ",사용자 이름: ${sessionScope.userInfo.name},에러가 발생한다.,"사용자 이름: ",/images/id-6xowdqf36.png,0,2025-10-02,2025-10-02,2025-10-02,"해당 컨트롤러는 request Scope에 데이터를 저장했습니다. 하지만 userView.jsp 에서는 EL 표현시긍ㄹ 통해 ${sessionScope.userinfo.name}과 같이 session Scope에서 데이터를 찾고 있습니다.

request scope 와 session scope는 별도의 저장공간으로 관리되므로, userInfo 객체를 찾을 수 없고, 화면에는 아무것도 출력되지 않습니다.

-> scope: page, request, session, applicatoin",,MVC
"UserService와 UserDAO가 싱글톤(Singleton) 패턴으로 구현되었고, UserService에 멤버 변수 currentUser가 존재합니다. 다음 중 이 설계의 가장 큰 문제점과 그 원인을 올바르게 짝지은 것은?",객관식,문제점: 메모리 낭비 / 원인: 요청마다 UserService 객체가 계속 생성됨,문제점: 동시성 문제 (Concurrency Issue) / 원인: 여러 요청(스레드)이 하나의 객체 인스턴스와 그 멤버 변수를 공유함,문제점: NullPointerException 발생 / 원인: getInstance()가 null을 반환할 수 있음,문제점이 존재하지 않는 정상 코드임,문제점: 동시성 문제 (Concurrency Issue) / 원인: 여러 요청(스레드)이 하나의 객체 인스턴스와 그 멤버 변수를 공유함,/images/id-hhc6mymc3.png,0,2025-10-02,2025-10-02,2025-10-02,"싱글톤 패턴은 프로세스 내에 단 하나의 객체만 생성하여 공유하는 방식입니다.
웹이 동작할 시, 모든 스레드(모든 사용자의 요청)가 단 하나의 UserService 객체를 공유합니다.
이때, currentUser 같은 상태를 저장하는 멤버 변수가 존재한다면 여러 스레드가 동시에 접근하여 동시성 문제가 발생할 수 있습니다.

싱글톤 객체는 절대로 상태를 가지면 안됩니다.",,MVC
"아래는 서블릿의 일부입니다. `GET /user/info?id=100` 요청이 들어왔을 때, 가장 먼저 `execute()` 메서드가 호출되는 컨트롤러 객체로 올바른 것은?",객관식,FrontController,UserController,BoardController,에러 발생,UserController,/images/id-auj9hzh8q.png,0,2025-10-02,2025-10-02,2025-10-02,"FrontController 패턴에서 `FrontController` 서블릿은 모든 요청을 가장 먼저 받습니다.
그 후 요청을 분석하여 해당 요청을 처리할 세부 컨트롤러를 결정하고 그 컨트롤러의 메서드를 실행시킵니다.

문제의 요청 url은 /user/info 이므로 FrontController가 UserController의 execute()를 실행합니다.",,MVC
JDBC 프로그래밍의 기본 단계 중 가장 먼저 수행해야 하는 작업은 무엇인가?,객관식,A. SQL 실행,B. Connection 생성,C. JDBC Driver 로딩,D. Statement 생성,C. JDBC Driver 로딩,,0,2025-10-02,2025-10-02,2025-10-02,"✅ 정답: C
💡 해설: JDBC 프로그래밍은 먼저 JDBC 드라이버를 로딩해야 DB 연결 객체를 생성할 수 있다. (JDBC 4.0 이후는 자동 로딩 지원)",,JDBC
PreparedStatement를 이용한 SQL 작성 예시 중 올바른 것은?,객관식,"A. 
PreparedStatement pstmt = conn.prepareStatement(
    insert into dept values(?, ?, ?)
);","B.
PreparedStatement pstmt = conn.prepareStatement(
    ""insert into dept values(?, ?, ?)""
);","C.
PreparedStatement pstmt = conn.prepareStatement(
    'insert into dept values(?, ?, ?)'
);","D.
PreparedStatement pstmt = conn.prepareStatement(
    insert into dept values(50, '개발팀', '광주')
);","B.
PreparedStatement pstmt = conn.prepareStatement(
    ""insert into dept values(?, ?, ?)""
);",,0,2025-10-02,2025-10-02,2025-10-02,"✅ 정답: B
💡 해설: SQL 구문은 반드시 문자열("""")로 감싸야 하며, ? 바인딩을 지원한다.",,JDBC
"아래 View가 생성되었다. 이후에 대한 설명을 작성하시오.  (1) dept10_view를 조회했을 때 나타나는 결과 설명 (2) INSERT INTO dept10_view VALUES (5, 'Hong', 20, 4500); 수행 시 결과 설명",주관식,,,,,"(1) dept_id = 10인 직원만 조회된다.
(2) dept_id = 20은 View 조건에 맞지 않으므로 삽입 불가 (오류 발생).",/images/id-7z85m3tzj.png,0,2025-10-02,2025-10-02,2025-10-02,,,#View #SQL
DBMS에서 View를 사용할 때 발생할 수 있는 단점 두 가지를 서술하시오.,주관식,,,,,"1. 성능 저하 (복잡한 View 실행 시)

2. 제한된 갱신 가능성 (조인/집계 포함된 View는 DML 불가)",,0,2025-10-02,2025-10-02,2025-10-02,"성능 저하 가능성: 복잡한 뷰는 조회할 때마다 원본 테이블에 대해 복잡한 연산을 수행해 성능이 떨어질 수 있다.

갱신 제한: 조인/집계가 포함된 뷰는 DML이 불가하거나 제한적이라 실무에서 업데이트 경로 관리가 필요하다.",,#View #DB
"다음 View 생성 SQL문이 있다. 이 View를 만들 때, 조건(salary >= 4000)에 맞지 않는 데이터가 삽입·수정되지 않도록 하기 위해 마지막에 추가해야 하는 구문은 무엇인가?",주관식,,,,,WITH CHECK OPTION,/images/id-3yczn84wb.png,0,2025-10-02,2025-10-02,2025-10-02,,,#View #SQL
WITH CHECK OPTION 절을 붙여 View를 생성할 경우 어떤 효과가 발생하는지 설명하시오.,주관식,,,,,View 정의 조건에 맞지 않는 데이터를 삽입/수정할 수 없도록 제한한다.,,0,2025-10-02,2025-10-02,2025-10-02,"뷰를 통해 INSERT/UPDATE 할 때 뷰의 WHERE 조건을 만족하지 않으면 거부한다.

즉, 뷰 경로로는 뷰 조건을 벗어나는 행을 만들 수 없게 하는 제약이다.",,#View #SQL
"다음 중 View에서 DML(INSERT, UPDATE, DELETE)이 가능한 경우는 언제인가?",객관식,집계 함수가 포함된 View,DISTINCT 키워드가 포함된 View,조인을 포함한 View,"단일 테이블 기반 View, 기본키 포함","단일 테이블 기반 View, 기본키 포함",,0,2025-10-02,2025-10-02,2025-10-02,"단일 테이블 기반이고 컬럼이 기저 테이블 컬럼과 1:1 매핑될 때(키 보존 등) DML이 가능하다.

집계, DISTINCT, 복잡한 조인, 계산식 컬럼 등이 포함되면 기저 테이블과 직접 매핑되지 않아 보통 DML 불가",,#View #DB
View emp_dept10_view에서 salary < 5000인 사원만 조회하는 SQL문을 작성하시오.,주관식,,,,,"SELECT *
FROM emp_dept10_view
WHERE salary < 5000;",,0,2025-10-02,2025-10-02,2025-10-02,,,#View #SQL
employee 테이블에서 dept_id=10인 직원들의 이름(name)과 연봉(salary)만 보여주는 View emp_dept10_view를 생성하는 SQL을 작성하시오.,주관식,,,,,"CREATE VIEW emp_dept10_view AS
SELECT name, salary
FROM employee
WHERE dept_id = 10;
",,0,2025-10-02,2025-10-02,2025-10-02,,,#View #SQL
View를 사용하는 두 가지 주요 장점을 작성하시오.,주관식,,,,,"1. 복잡한 SQL 쿼리를 단순화하여 재사용성을 높인다.

2. 민감한 데이터를 숨기고 필요한 컬럼만 노출하여 보안을 강화한다.",,0,2025-10-02,2025-10-02,2025-10-02,"쿼리 단순화·재사용성: 복잡한 JOIN/계산을 뷰에 묶어두면 매번 같은 복잡한 쿼리를 작성할 필요 없이 뷰를 재사용하면 된다.
보안(컬럼 은닉): 민감한 컬럼을 뷰에서 제외하고 필요한 컬럼만 사용자에게 권한 부여하면 데이터 노출을 제한할 수 있다.",,#View #DB
다음 중 View를 사용하는 이유로 가장 적절하지 않은 것은?,객관식,복잡한 쿼리를 단순화할 수 있다.,특정 사용자에게 필요한 데이터만 제공할 수 있다.,데이터를 중복 저장하여 성능을 높인다.,동일한 쿼리를 재사용할 수 있다.,데이터를 중복 저장하여 성능을 높인다.,,0,2025-10-02,2025-10-02,2025-10-02,View는 데이터를 저장하지 않으므로 중복 저장과는 관계가 없다.,,#View #SQL
다음 중 View의 특징으로 옳지 않은 것은?,객관식,View는 실제 데이터를 저장하지 않는다.,View는 보안 강화를 위해 사용할 수 있다.,View는 인덱스를 가질 수 있다.,View는 SELECT문의 결과를 기반으로 한다.,View는 인덱스를 가질 수 있다.,,0,2025-10-02,2025-10-02,2025-10-02,View는 가상의 테이블이므로 인덱스를 직접 가질 수 없다. 원본 테이블의 인덱스를 활용한다.,,#View #DB
${ loginUser.name} 은 무엇을 출력하나요?,객관식,loginUser 변수의 name 직접 접근해서 가져온 값,loginUser 객체의 getName() 메서드 호출 결과,둘 다 맞음,둘 다 틀림,loginUser 객체의 getName() 메서드 호출 결과,/images/id-v3p3bde7k.png,0,2025-10-02,2025-10-02,2025-10-02,private 변수를 getter 를 사용해 값을 가져오기 때문에 직접 접근할 수 없다.,,EL
다음 이미지 코드의 역할을 설명해주세요.,객관식,프로젝트의 루트 경로를 동적으로 저장하여 재사용하기 위해,서버의 절대 경로를 저장하기 위해,데이터베이스 연결 경로를 저장하기 위해,사용자 홈 디렉토리를 저장하기 위해,프로젝트의 루트 경로를 동적으로 저장하여 재사용하기 위해,/images/id-n8fcz3gc4.png,0,2025-10-02,2025-10-02,2025-10-02,"http://localhost:8080/ssafy/index.jsp
→ contextPath = ""/ssafy""",,JSTL
다음 이미지의 빨간 빈칸에 들어갈 태그 및 속성은?,주관식,jstl,core,c,tag,"taglib, prefix, uri",/images/id-1f5p5jw8h.png,0,2025-10-02,2025-10-02,2025-10-02,"<%@ taglib prefix=""c"" uri=""jakarta.tags.core""%>",,JSTL
"EL에서 ${변수명}처럼 scope를 명시하지 않았을 때, 자동으로 검색하는 순서를 좁은 범위부터 순서대로 나열하세요.",주관식,,,,,"page scope, request scope, session scope, application scope",/images/id-8swr6fphd.png,0,2025-10-02,2025-10-02,2025-10-02,"page scope → request scope → session scope → application scope 또는
pageScope → requestScope → sessionScope → applicationScope",,EL
다음 Servlet 코드가 있습니다. JSP에서 ${price}를 출력하면 결과는?,객관식,null,에러 발생,"빈 문자열 ("""")",15000,15000,/images/id-4u8afird2.png,0,2025-10-02,2025-10-02,2025-10-02,"EL에서 속성 값을 탐색할 때, 현재 scope에 해당 속성이 존재하지 않거나 null인 경우 자동으로 다음 우선순위의 scope로 이동하여 값을 검색합니다.",,EL
JDBC 프로그래밍의 기본 단계 중 가장 먼저 수행해야 하는 작업은 무엇인가?,객관식,A. SQL 실행,B. Connection 생성,C. JDBC Driver 로딩,D. Statement 생성,C. JDBC Driver 로딩,,0,2025-10-02,2025-10-02,2025-10-02,"✅ 정답: C
💡 해설: JDBC 프로그래밍은 먼저 JDBC 드라이버를 로딩해야 DB 연결 객체를 생성할 수 있다. (JDBC 4.0 이후는 자동 로딩 지원)",,JDBC
PreparedStatement를 이용한 SQL 작성 예시 중 올바른 것은?,객관식,"A. 
PreparedStatement pstmt = conn.prepareStatement(
    insert into dept values(?, ?, ?)
);","B.
PreparedStatement pstmt = conn.prepareStatement(
    ""insert into dept values(?, ?, ?)""
);","C.
PreparedStatement pstmt = conn.prepareStatement(
    'insert into dept values(?, ?, ?)'
);","D.
PreparedStatement pstmt = conn.prepareStatement(
    insert into dept values(50, '개발팀', '광주')
);","B.
PreparedStatement pstmt = conn.prepareStatement(
    ""insert into dept values(?, ?, ?)""
);",,0,2025-10-02,2025-10-02,2025-10-02,"✅ 정답: B
💡 해설: SQL 구문은 반드시 문자열("""")로 감싸야 하며, ? 바인딩을 지원한다.",,JDBC
다음 JSP 내장 객체 중 클라이언트에게 응답 데이터를 보내기 전에 서버 내부에서 '다른 페이지로 이동'하도록 지시할 때 사용하는 기능(리다이렉트 또는 콘텐츠 타입 설정 등)을 제공하는 객체는 무엇입니까?,객관식,out,request,exception,response,response,,0,2025-10-02,2025-10-02,2025-10-02,"response 객체는 클라이언트에게 보낼 응답을 생성할 때 사용되며, 리다이렉트 명령(sendRedirect)이나 콘텐츠 타입 설정 등을 담당합니다.",,Servlet & jsp
"JSP 페이지에서 EL(Expression Language)을 사용하여 쿠키에 저장된 'username' 값을 가져오고자 할 때, 올바른 문법은 무엇입니까?",객관식,${cookie.username.value},${param.username},${request.getAttribute('username')},${sessionScope.username},${cookie.username.value},,0,2025-10-02,2025-10-02,2025-10-02,쿠키의 저장된 값은 'cookie.쿠키명.value' 형식으로 접근하여 가져옵니다. 'cookie'는 EL의 내장 객체입니다.,,Servlet & jsp
다음 JSP 스크립팅 요소에 대한 설명 중 올바른 것은 무엇입니까?,객관식,JSP 주석 태그(<%-- ... --%>)는 클라이언트(브라우저)에게 전송되어 소스 보기로 확인 가능하다.,정의어 태그(<%! ... %>)에 선언된 변수는 JSP 페이지가 변환된 서블릿의 인스턴스 멤버 변수가 되어 모든 요청 스레드에 공유된다.,스크립트릿 태그(<% ... %>) 내부에 선언된 변수는 웹 애플리케이션이 종료될 때까지 값이 유지되는 세션(Session) 스코프를 가진다.,"표현식 태그(<%= ... %>) 내부에 'request.getParameter(""id"");'와 같이 세미콜론(;)을 사용하여 구문을 마쳐야 한다.",정의어 태그(<%! ... %>)에 선언된 변수는 JSP 페이지가 변환된 서블릿의 인스턴스 멤버 변수가 되어 모든 요청 스레드에 공유된다.,,0,2025-10-02,2025-10-02,2025-10-02,"정의어 태그는 서블릿 클래스의 멤버 변수/메서드 영역에 선언되므로 인스턴스 변수가 되며, 이는 여러 스레드가 공유하여 스레드 안전성 문제가 발생할 수 있습니다.",,Servlet & jsp
"JSP에서 `if`, `for`, `while` 등의 자바 제어문을 사용하거나, 단순히 서버 측에서 실행될 자바 코드(값을 출력하지 않는)를 작성할 때 사용하는 스크립팅 요소는 무엇입니까?",객관식,"<% ... %> ","
<%= ... %>","
<%! ... %>",<%-- ... --%>,"<% ... %> ",,0,2025-10-02,2025-10-02,2025-10-02,"스크립트릿은 JSP의 주요 자바 코드 블록이며, 자바의 제어문이나 로직을 구현하는 데 사용됩니다.",,Servlet & jsp
"JSP 내장 객체 중 웹 애플리케이션의 시작부터 종료까지 서버 내에서 영구적으로 유지되며, 모든 사용자가 공유하는 애플리케이션 전역 정보를 저장하는 객체는 무엇입니까?",객관식,request,application,page,session,application,,0,2025-10-02,2025-10-02,2025-10-02,"application 객체는 ServletContext에 매핑되며, 애플리케이션 전역 스코프를 가집니다.",,Servlet & jsp
특정 경로에 대한 모든 요청이 서블릿에 도달하기 전에 공통적인 인증 및 인코딩 작업을 수행해야 합니다. 이 요구사항을 가장 효율적이고 구조적으로 처리할 수 있도록 도와주는 서블릿 기술 요소는 무엇입니까?,객관식,HttpServletResponse,지시어 <%@ page %>,Servlet Filter,Listener,Servlet Filter,,0,2025-10-02,2025-10-02,2025-10-02,"필터는 요청(Request)과 응답(Response)이 서블릿에 도달하거나 서블릿을 떠나기 전에 가로채어 공통적인 전/후처리(로깅, 인코딩, 인증 등)를 수행하도록 설계되었습니다.",,Servlet & jsp
"클라이언트가 /old-page로 요청했을 때, 서버 내부에서 RequestDispatcher.forward(""/new-page"", request, response)를 사용하여 페이지를 이동시키는 방식에 대한 설명으로 옳은 것은 무엇입니까?",객관식,"클라이언트의 주소창은 /old-page로 유지되며, /new-page의 응답 결과를 클라이언트에게 대신 전달한다.",클라이언트에게는 HTTP 상태 코드 302(Found)와 함께 /new-page로의 재요청 명령이 전달된다.,"
클라이언트의 웹 브라우저 주소창은 /new-page로 변경되지만, 요청 객체는 유지되지 않는다.",페이지 이동 시 /old-page에서 request.setAttribute()로 저장했던 요청(Request) 데이터는 모두 소멸되어 /new-page에서 접근할 수 없다.,"클라이언트의 주소창은 /old-page로 유지되며, /new-page의 응답 결과를 클라이언트에게 대신 전달한다.",,0,2025-10-02,2025-10-02,2025-10-02,"Forward는 서버 내부에서 요청과 응답 객체를 유지한 채 제어를 넘기며, 클라이언트는 이 과정을 알지 못합니다.",,Servlet & jsp
"JSP의 9가지 내장 객체 중, 해당 JSP 페이지가 에러 처리 페이지로 설정되었을 때(isErrorPage=""true"")만 유효하게 사용할 수 있는 객체는 무엇입니까?",객관식,exception,application,pageContext,config,exception,/images/id-xu24q6y8i.png,0,2025-10-02,2025-10-02,2025-10-02,"에러 페이지로 설정된 경우, 발생한 예외 객체를 `java.lang.Throwable` 타입으로 접근할 수 있도록 제공하는 객체입니다.",,Servlet & jsp
"서블릿 필터(Filter)의 doFilter() 메서드 내에서 chain.doFilter(request, response) 호출을 생략했을 때 발생하는 결과는 무엇입니까?",객관식,"필터 체인의 나머지 필터는 실행되지만, 최종 대상 서블릿/JSP는 실행되지 않습니다.",자동으로 HTTP 상태 코드 404 (Not Found) 응답이 반환됩니다.,다음 필터 또는 최종 대상 서블릿/JSP로 요청이 전달되지 않고 필터에서 응답 처리가 종료됩니다.,JVM의 스택 오버플로우 오류가 발생하여 서버가 다운됩니다.,다음 필터 또는 최종 대상 서블릿/JSP로 요청이 전달되지 않고 필터에서 응답 처리가 종료됩니다.,/images/id-k2t8q7bmc.png,0,2025-10-02,2025-10-02,2025-10-02,"`chain.doFilter()` 호출을 생략하면 현재 필터에서 요청 처리가 멈추게 되고, 필터가 직접 응답을 보내거나 응답 처리를 종료해야 합니다.",,Servlet & jsp
"다음과 같이 web.xml에 서블릿 매핑이 정의되어 있을 때(이미지를 통해 매핑 확인가능), URL /data/member/info 요청을 처리하는 서블릿은 무엇입니까? ",객관식,ServletB,ServletA,요청 처리를 위한 서블릿을 찾을 수 없습니다.,ServletC,ServletC,/images/id-nz10h8444.png,0,2025-10-02,2025-10-02,2025-10-02,서블릿 매핑 규칙에서 가장 높은 우선순위는 **정확한 경로 매핑**입니다. `/app/mypage.do`는 가장 정확하게 일치하는 패턴입니다.,,Servlet & jsp
"서블릿 컨테이너가 서블릿의 service() 메서드를 호출할 때, 각 요청마다 새로운 HttpServletRequest 객체를 생성하는 주된 이유와 가장 거리가 먼 것은 무엇입니까?",객관식,service() 메서드의 응답 결과를 즉시 클라이언트에게 반환하기 위해.,요청별로 필요한 속성(Attribute)을 독립적으로 저장 및 전달하기 위해.,각 요청에 대한 클라이언트의 입력 데이터를 격리하기 위해.,요청 정보에 대한 스레드 안전성(Thread Safety)을 보장하기 위해.,service() 메서드의 응답 결과를 즉시 클라이언트에게 반환하기 위해.,,0,2025-10-02,2025-10-02,2025-10-02,"응답을 반환하는 것은 `HttpServletResponse` 객체와 컨테이너의 역할이며, 요청 객체와 직접적인 관련이 없습니다. 응답의 즉각적인 반환은 멀티스레딩 구조가 아닌 요청 객체와는 무관합니다.",,Servlet & jsp
다음 중 데이터 정의 언어(DDL)에 속하지 않는 명령어는?,객관식,CREATE,ALTER,UPDATE,DROP,UPDATE,,0,2025-10-02,2025-10-02,2025-10-02,"UPDATE는 테이블 내의 데이터를 수정하는 DML(데이터 조작어)이며, 테이블의 구조를 정의하는 DDL이 아닙니다.",,SQL
NULL 값에 대한 설명으로 가장 올바르지 않은 것은?,객관식,0이나 공백('')과는 다른 '알 수 없는 값'이다.,IS NULL 연산자로만 비교할 수 있다.,산술 연산에서 100 + NULL의 결과는 100이다.,"IFNULL(컬럼, 0)은 컬럼이 NULL일 때 0을 반환한다.",산술 연산에서 100 + NULL의 결과는 100이다.,,0,2025-10-02,2025-10-02,2025-10-02,NULL과의 모든 산술 연산 결과는 NULL이 됩니다. 따라서 100 + NULL의 결과는 100이 아닌 NULL입니다.,,SQL
'SQL'과 'Study'라는 두 문자열을 'SQL Study'로 합치기 위해 가장 적합한 함수는?,객관식,SUBSTRING(),REPLACE(),CONCAT(),TRIM(),CONCAT(),,0,2025-10-02,2025-10-02,2025-10-02,CONCAT() 함수는 둘 이상의 문자열을 하나의 문자열로 결합하는 역할을 합니다.,,SQL
두 날짜 사이의 일(day) 수 차이를 계산하는 함수는 무엇인가요?,객관식,TIMEDIFF(),TIMESTAMPDIFF(),DATE_ADD(),DATEDIFF(),DATEDIFF(),,0,2025-10-02,2025-10-02,2025-10-02,"DATEDIFF(날짜1, 날짜2)는 두 날짜 간의 일 수 차이를 정수로 반환합니다.",,SQL
DDL과 DML의 근본적인 차이점을 한 문장으로 설명하세요.,주관식,,,,,"DDL은 데이터베이스의 구조(스키마)를 정의하고, DML은 그 구조 안에 저장된 실제 데이터를 조작(관리)합니다.",,0,2025-10-02,2025-10-02,2025-10-02,"DDL(CREATE, ALTER, DROP)은 테이블 같은 뼈대를 다루고, DML(SELECT, INSERT, UPDATE, DELETE)은 그 뼈대 안의 내용을 다룹니다.",,SQL
ORDER BY 절의 기본 정렬 순서와 내림차순 정렬 키워드를 각각 작성하세요.,주관식,,,,,"기본 정렬: 오름차순(ASC), 내림차순 키워드: DESC",,0,2025-10-02,2025-10-02,2025-10-02,"ORDER BY는 기본적으로 ASC(오름차순)으로 동작하며, DESC 키워드를 명시하여 내림차순으로 정렬할 수 있습니다.",,SQL
데이터의 타입을 다른 타입으로 명시적으로 변환할 때 사용하는 함수를 2가지 작성하세요.,주관식,,,,,CAST()와 CONVERT(),,0,2025-10-02,2025-10-02,2025-10-02,CAST와 CONVERT는 문자열을 숫자나 날짜로 바꾸거나 그 반대의 경우처럼 데이터의 타입을 명시적으로 변경할 때 사용되는 표준 함수입니다.,,SQL
수정된 데이터를 데이터베이스에 영구적으로 반영(저장)하는 TCL 명령어는?,객관식,COMMIT,ROLLBACK,SAVEPOINT,GRANT,COMMIT,,0,2025-10-02,2025-10-02,2025-10-02,COMMIT은 트랜잭션 내에서 수행된 모든 변경사항을 데이터베이스에 영구적으로 저장하는 명령어입니다.,,SQL
"현재 날짜만 반환하며, 시간 정보는 포함하지 않는 함수는?",객관식,NOW(),SYSDATE(),CURRENT_TIMESTAMP(),CURDATE(),CURDATE(),,0,2025-10-02,2025-10-02,2025-10-02,CURDATE() 또는 CURRENT_DATE()는 YYYY-MM-DD 형식으로 현재 '날짜'만 반환합니다.,,SQL
CASE 표현식에 대한 설명으로 올바르지 않은 것은?,객관식,SQL 문 내에서 조건부 로직을 구현한다.,ELSE 절을 생략하고 만족하는 조건이 없으면 NULL을 반환한다.,ELSE 절을 생략하고 만족하는 조건이 없으면 0을 반환한다.,"SELECT, WHERE, ORDER BY 절 등에서 사용할 수 있다.",ELSE 절을 생략하고 만족하는 조건이 없으면 0을 반환한다.,,0,2025-10-02,2025-10-02,2025-10-02,"CASE 표현식에서 일치하는 WHEN 조건이 없고 ELSE 절도 생략된 경우, 결과는 0이 아닌 NULL이 반환됩니다.",,SQL
문자열에서 양쪽 끝의 공백을 제거하는 함수는 무엇인가요?,객관식,LTRIM(),RTRIM(),TRIM(),REPLACE(),TRIM(),,0,2025-10-02,2025-10-02,2025-10-02,"TRIM() 함수는 문자열의 시작과 끝에 있는 공백(또는 지정된 문자)을 제거합니다. LTRIM은 왼쪽, RTRIM은 오른쪽 공백만 제거합니다.",,SQL
LIKE 연산자에서 사용되는 와일드카드 '%'와 '_'의 차이점을 설명하세요.,주관식,,,,,"'%'는 0개 이상의 모든 문자를 의미하고, '_'는 정확히 1개의 문자를 의미합니다.",,0,2025-10-02,2025-10-02,2025-10-02,"예를 들어, '김%'는 '김'으로 시작하는 모든 문자열(김, 김철수 등)을 찾지만, '김__'는 '김'으로 시작하는 정확히 세 글자인 문자열(김대한 등)만 찾습니다.",,SQL
IF() 함수와 IFNULL() 함수의 가장 큰 차이점을 조건 평가 방식과 관련하여 설명하세요.,주관식,,,,,"IF()는 첫 번째 인자의 논리식(참/거짓)을 평가하고, IFNULL()은 첫 번째 인자의 NULL 여부만을 평가합니다.",,0,2025-10-02,2025-10-02,2025-10-02,"IF(조건식, 참일때, 거짓일때)는 조건식의 결과에 따라 값을 반환하는 반면, IFNULL(표현식, NULL일때)은 표현식이 NULL인지 아닌지에 따라 값을 반환하는 용도로 특화되어 있습니다.",,SQL
관계형 데이터베이스에서 '관계(Relationship)'는 주로 어떤 요소를 통해 테이블 간에 구현되나요?,주관식,,,,,외래 키 (Foreign Key),,0,2025-10-02,2025-10-02,2025-10-02,외래 키는 한 테이블의 컬럼이 다른 테이블의 기본 키(Primary Key)를 참조하여 두 테이블 간의 관계를 설정하는 핵심적인 역할을 합니다.,,SQL
"아래 쿼리 실행 시, 첫 번째 행에 반환될 직원의 이름(emp_name)은 무엇인가요? (쿼리: SELECT emp_name, salary FROM employees WHERE salary > 2000 ORDER BY salary DESC;)",주관식,,,,,King,/images/id-fwjv0sq52.png,0,2025-10-02,2025-10-02,2025-10-02,"WHERE salary > 2000 조건으로 King(5000), Scott(3000)이 조회되고, ORDER BY salary DESC에 의해 salary가 높은 순으로 정렬되어 King이 첫 번째 행에 위치합니다.",,SQL
"아래 쿼리 실행 시, 'Adams' 직원의 adjusted_salary 컬럼에 표시될 값은 무엇인가요? (쿼리: SELECT emp_name, IFNULL(salary, 2500) AS adjusted_salary FROM employees WHERE emp_name = 'Adams';)",주관식,,,,,2500,/images/id-f2n24eusr.png,0,2025-10-02,2025-10-02,2025-10-02,"Adams의 salary는 NULL이므로, IFNULL 함수에 의해 두 번째 인자인 2500이 adjusted_salary 컬럼의 값으로 반환됩니다.",,SQL
"아래 쿼리 실행 시, formatted_date 컬럼에 표시될 값은 어떤 형식인가요? (쿼리: SELECT DATE_FORMAT('2023-03-20', '%y년 %m월 %d일') AS formatted_date;)",주관식,,,,,23년 03월 20일,/images/id-f786znnvr.png,0,2025-10-02,2025-10-02,2025-10-02,"DATE_FORMAT 함수와 '%y', '%m', '%d' 형식 지정자에 의해 '2023-03-20' 날짜가 '23년 03월 20일' 문자열로 변환됩니다.",,SQL
"아래 쿼리 실행 시, 'King'과 'Smith' 직원의 salary_grade 컬럼에 각각 어떤 값이 들어갈지 쉼표로 구분하여 순서대로 작성하세요. (쿼리: SELECT emp_name, CASE WHEN salary >= 5000 THEN 'High' WHEN salary >= 2000 THEN 'Middle' ELSE 'Entry' END AS salary_grade FROM employees;)",주관식,,,,,"High, Entry",/images/id-rwp4cgw27.png,0,2025-10-02,2025-10-02,2025-10-02,"King의 salary(5000)는 '>= 5000' 조건을 만족하여 'High'가 되고, Smith의 salary(1800)는 앞의 두 조건을 만족하지 못해 ELSE 절의 'Entry'가 됩니다.",,SQL
다음 중 DML(Data Manipulation Language)에 해당하지 않는 명령어는?,객관식,INSERT,UPDATE,CREATE,DELETE,CREATE,,0,2025-10-02,2025-10-02,2025-10-02,"CREATE는 테이블 구조를 정의하는 DDL(Data Definition Language, 데이터 정의어)에 속합니다. DML은 데이터를 조작하는 명령어입니다.",,SQL
UPDATE 문 사용 시 WHERE 절을 생략했을 때 발생하는 결과로 올바른 것은?,객관식,구문 오류가 발생한다.,테이블의 첫 번째 행만 수정된다.,테이블의 모든 행이 수정된다.,테이블의 구조가 삭제된다.,테이블의 모든 행이 수정된다.,,0,2025-10-02,2025-10-02,2025-10-02,WHERE 절은 수정할 행을 특정하는 조건절입니다. 생략 시 테이블의 모든 행에 UPDATE가 적용되어 데이터 무결성을 해칠 수 있습니다.,,SQL
다음 집계 함수 중 NULL 값을 계산에 포함하는 것은?,객관식,SUM(column),AVG(column),COUNT(column),COUNT(*),COUNT(*),,0,2025-10-02,2025-10-02,2025-10-02,COUNT(*)는 모든 행의 수를 세므로 NULL 값도 포함합니다. 다른 집계 함수들은 연산 시 NULL 값을 제외합니다.,,SQL
GROUP BY로 그룹화된 결과에 대한 조건을 지정하기 위해 사용하는 절은?,객관식,WHERE,HAVING,CONDITION,FILTER,HAVING,,0,2025-10-02,2025-10-02,2025-10-02,HAVING 절은 그룹화된 결과(집계 함수 결과)에 대한 필터링을 수행합니다. WHERE 절은 그룹화 이전의 개별 행을 필터링합니다.,,SQL
"트랜잭션의 특징(ACID) 중, 모든 작업이 전부 성공하거나 전부 실패해야 한다는 원칙은 무엇인가요?",객관식,원자성 (Atomicity),일관성 (Consistency),고립성 (Isolation),지속성 (Durability),원자성 (Atomicity),,0,2025-10-02,2025-10-02,2025-10-02,원자성(Atomicity)은 트랜잭션이 더 이상 쪼갤 수 없는 하나의 작업 단위처럼 동작해야 함을 의미합니다. (All or Nothing),,SQL
COMMIT 되지 않은 다른 트랜잭션의 데이터를 읽을 수 있는 가장 낮은 수준의 격리 수준(Isolation Level)은 무엇인가요?,객관식,READ COMMITTED,REPEATABLE READ,SERIALIZABLE,READ UNCOMMITTED,READ UNCOMMITTED,,0,2025-10-02,2025-10-02,2025-10-02,READ UNCOMMITTED 수준에서는 아직 커밋되지 않은 데이터(Dirty Read)를 읽을 수 있어 정합성에 문제가 발생할 수 있습니다.,,SQL
트랜잭션 처리 중 오류가 발생하여 모든 작업을 취소하고 트랜잭션 시작 전 상태로 되돌리는 명령어는?,객관식,COMMIT,SAVEPOINT,ROLLBACK,START TRANSACTION,ROLLBACK,,0,2025-10-02,2025-10-02,2025-10-02,ROLLBACK은 트랜잭션 내에서 수행된 모든 변경 사항을 취소하고 데이터베이스를 트랜잭션 시작 시점의 상태로 되돌립니다.,,SQL
"WITH ROLLUP을 사용할 때, GROUPING() 함수의 반환 값이 1인 경우는 무엇을 의미하는가?",객관식,해당 행의 값이 실제 NULL일 경우,ROLLUP에 의해 생성된 소계 또는 총계 행일 경우,그룹화에 오류가 발생했을 경우,집계 함수가 사용되지 않았을 경우,ROLLUP에 의해 생성된 소계 또는 총계 행일 경우,,0,2025-10-02,2025-10-02,2025-10-02,"GROUPING() 함수는 ROLLUP이나 CUBE에 의해 추가된 행의 NULL과 실제 데이터의 NULL을 구분하기 위해 사용되며, 추가된 행에 대해서는 1을 반환합니다.",,SQL
WHERE 절과 HAVING 절의 차이점을 '적용 시점'과 '사용 가능 함수'를 기준으로 간략히 서술하시오.,주관식,,,,,"WHERE는 그룹화 전 개별 행에 적용되고 집계 함수를 쓸 수 없지만, HAVING은 그룹화 후 결과에 적용되며 집계 함수를 조건으로 사용할 수 있다.",,0,2025-10-02,2025-10-02,2025-10-02,"WHERE는 FROM 절 다음에, HAVING은 GROUP BY 절 다음에 위치하며, 데이터 필터링 단계가 다릅니다. WHERE는 행을 그룹화하기 전에 필터링하고, HAVING은 그룹화된 결과를 필터링합니다.",,SQL
트랜잭션의 고립성(Isolation)이 왜 중요한지 '데이터의 일관성' 측면에서 설명하시오.,주관식,,,,,"하나의 트랜잭션이 완료되기 전까지 다른 트랜잭션이 중간 결과에 접근하지 못하게 막아, 완료되지 않은 데이터(Dirty Read 등)를 읽어 발생하는 데이터 불일치 문제를 방지하기 때문이다.",,0,2025-10-02,2025-10-02,2025-10-02,고립성이 보장되지 않으면 여러 트랜잭션이 동시에 실행될 때 서로에게 영향을 주어 데이터의 일관성과 정합성이 깨질 수 있습니다.,,SQL
"트랜잭션의 격리 수준(Isolation Level)을 높일수록(예: SERIALIZABLE) 데이터의 정합성은 높아지지만, 어떤 단점이 발생하는지 서술하시오.",주관식,,,,,동시성이 낮아져 시스템 전체의 성능 저하를 유발할 수 있다.,,0,2025-10-02,2025-10-02,2025-10-02,격리 수준이 높아질수록 데이터베이스는 더 많은 잠금(Lock)을 사용하게 됩니다. 이는 여러 트랜잭션이 동시에 데이터를 처리하는 것을 방해하여 응답 시간을 늘리고 전체 처리량을 감소시킬 수 있습니다.,,SQL
"계좌 이체 상황을 예로 들어, 왜 트랜잭션이 반드시 필요한지 '출금'과 '입금' 과정을 포함하여 설명하시오.",주관식,,,,,"출금은 성공했지만 입금에 실패하는 경우, 트랜잭션이 없으면 돈만 사라지는 데이터 불일치 상태가 된다. 트랜잭션은 두 작업을 하나로 묶어 입금 실패 시 출금까지 취소(ROLLBACK)하여 원자성을 보장한다.",,0,2025-10-02,2025-10-02,2025-10-02,"트랜잭션은 '출금'과 '입금'이라는 두 개의 개별적인 DML을 하나의 논리적인 작업 단위로 묶어, 일부만 성공하는 상황을 방지하고 데이터의 무결성과 일관성을 유지합니다.",,SQL
"다음 쿼리의 실행 결과를 예측하시오: SELECT dept_no, SUM(salary) FROM employees GROUP BY dept_no HAVING SUM(salary) > 11000;",주관식,,,,,"dept_no: 20, SUM(salary): 12500",/images/id-258ws11oy.png,0,2025-10-02,2025-10-02,2025-10-02,"[테이블 데이터 기준] 10번 부서 합계(11000)는 HAVING 조건(>11000)에 미달하여 제외되고, 20번 부서 합계(12500)만 결과에 포함됩니다.",,SQL
"다음 쿼리의 실행 결과를 예측하시오: SELECT dept_no, COUNT(salary) FROM employees GROUP BY dept_no;",주관식,,,,,"dept_no: 10, COUNT(salary): 2 | dept_no: 20, COUNT(salary): 2",/images/id-nm4ky4yt8.png,0,2025-10-02,2025-10-02,2025-10-02,[테이블 데이터 기준] COUNT(salary)는 salary 컬럼이 NULL인 데이터를 제외하고 개수를 셉니다. 따라서 salary가 NULL인 10번 부서의 Eve는 집계에서 제외되어 두 부서 모두 카운트는 2가 됩니다.,,SQL
"다음 트랜잭션이 최종 COMMIT 되었을 때, emp_no가 101인 직원의 salary는 얼마가 될 것인지 예측하시오. (START TRANSACTION; UPDATE employees SET salary = 5500 WHERE emp_no = 101; SAVEPOINT sp1; UPDATE employees SET salary = 6500 WHERE emp_no = 101; ROLLBACK TO sp1; COMMIT;)",주관식,,,,,5500,/images/id-oj36u9wj2.png,0,2025-10-02,2025-10-02,2025-10-02,"salary를 6500으로 변경한 UPDATE는 'ROLLBACK TO sp1'에 의해 취소됩니다. 따라서 sp1 저장점 시점의 값, 즉 salary를 5500으로 변경한 첫 번째 UPDATE문의 결과만 최종 COMMIT되어 데이터베이스에 영구 반영됩니다.",,SQL
다음 중 데이터 정의 언어(DDL)에 해당하지 않는 명령어는?,객관식,CREATE,ALTER,SELECT,DROP,SELECT,,0,2025-10-02,2025-10-02,2025-10-02,"DDL은 데이터베이스 객체의 구조를 정의하는 언어로 CREATE, ALTER, DROP이 있으며 SELECT는 데이터를 조회하는 DML(데이터 조작 언어)입니다.",,DATABASE
"테이블에서 모든 데이터를 삭제하지만, 테이블 구조는 남겨두는 명령어는?",객관식,DROP TABLE,DELETE FROM,TRUNCATE TABLE,ALTER TABLE,TRUNCATE TABLE,,0,2025-10-02,2025-10-02,2025-10-02,"TRUNCATE는 테이블 구조는 유지한 채 내부의 모든 행을 빠르게 삭제합니다. DROP은 테이블 자체를 삭제하고, DELETE는 트랜잭션 로그를 남기며 행 단위로 삭제합니다.",,DATABASE
뷰(View)에 대한 설명으로 가장 올바르지 않은 것은?,객관식,뷰는 다른 테이블을 기반으로 만들어진 가상 테이블이다.,뷰는 실제 데이터를 저장하고 있어 조회 속도가 빠르다.,복잡한 쿼리를 단순화하고 보안을 강화하는 데 도움이 된다.,GROUP BY나 집계 함수를 사용한 복합 뷰는 데이터 수정이 불가능하다.,뷰는 실제 데이터를 저장하고 있어 조회 속도가 빠르다.,,0,2025-10-02,2025-10-02,2025-10-02,"뷰는 데이터를 저장하지 않는 가상의 테이블로, 정의된 쿼리를 실행하여 기반 테이블의 데이터를 보여주는 창과 같은 역할을 합니다. 따라서 데이터를 직접 저장하지 않습니다.",,DATABASE
인덱스(Index)의 장점으로 가장 적합한 것은?,객관식,데이터베이스의 전체 저장 공간을 줄여준다.,"INSERT, UPDATE 작업의 성능을 향상시킨다.",데이터 조회(SELECT) 시 검색 속도를 향상시킨다.,데이터의 무결성을 보장하는 유일한 방법이다.,데이터 조회(SELECT) 시 검색 속도를 향상시킨다.,,0,2025-10-02,2025-10-02,2025-10-02,인덱스는 책의 색인처럼 데이터의 물리적 위치를 빠르게 찾아주어 SELECT 쿼리의 성능을 크게 향상시킵니다. 하지만 DML 작업 시 인덱스도 수정해야 하므로 성능이 저하될 수 있습니다.,,DATABASE
뷰 생성 시 WITH CHECK OPTION을 사용하는 주된 이유는?,객관식,뷰의 조회 속도를 높이기 위해,뷰의 기반이 되는 테이블의 수정을 막기 위해,뷰의 조건에 맞지 않는 데이터의 입력을 방지하기 위해,뷰를 생성하는 사용자의 권한을 확인하기 위해,뷰의 조건에 맞지 않는 데이터의 입력을 방지하기 위해,,0,2025-10-02,2025-10-02,2025-10-02,"WITH CHECK OPTION은 뷰를 통해 데이터를 수정하거나 삽입할 때, 뷰의 WHERE 조건절에 위배되는 데이터는 작업이 수행되지 않도록 막는 역할을 합니다.",,DATABASE
`DROP TABLE`과 `TRUNCATE TABLE`의 차이점을 서술하시오.,주관식,,,,,"`DROP`은 테이블의 구조와 데이터를 모두 삭제하여 테이블 자체가 사라지지만, `TRUNCATE`는 테이블 구조는 남겨두고 내부의 모든 데이터만 삭제한다.",,0,2025-10-02,2025-10-02,2025-10-02,"TRUNCATE는 DDL로 분류되어 롤백이 불가능하고 작업 속도가 빠르며, DELETE는 DML로 롤백이 가능하고 행 단위 삭제로 로그를 남깁니다. DROP은 테이블 객체 자체를 제거합니다.",,DATABASE
"인덱스를 생성하면 SELECT 성능은 향상되지만, INSERT, UPDATE, DELETE 성능은 저하될 수 있는 이유를 간략히 설명하시오.",주관식,,,,,"데이터가 추가, 수정, 삭제될 때마다 테이블의 데이터뿐만 아니라 정렬된 상태를 유지해야 하는 인덱스도 함께 변경(재정렬)해야 하므로 추가적인 작업 비용이 발생하기 때문이다.",,0,2025-10-02,2025-10-02,2025-10-02,"데이터 변경 시 인덱스의 정렬 순서를 유지하기 위한 추가 작업이 필요하며, 이는 DML(Data Manipulation Language) 작업에 오버헤드로 작용합니다.",,DATABASE
"데이터 무결성을 지키기 위한 제약 조건(Constraints)의 종류 5가지를 나열하고, `PRIMARY KEY`에 대해 설명하시오.",주관식,,,,,"종류: NOT NULL, UNIQUE, PRIMARY KEY, FOREIGN KEY, CHECK. 
PRIMARY KEY(기본 키)는 테이블의 각 행을 고유하게 식별하는 컬럼으로, NOT NULL과 UNIQUE 제약조건을 모두 만족해야 한다.",,0,2025-10-02,2025-10-02,2025-10-02,제약 조건은 데이터의 정확성과 일관성을 보장하는 규칙입니다. 기본 키는 테이블의 식별자 역할을 하며 데이터베이스 관계 설정의 핵심 요소입니다.,,DATABASE
아래 두 가지 요구사항을 모두 충족시키기 위해 가장 적절한 HTTP 메서드와 그 이유는 무엇일까요?,객관식,"POST 요청: 검색어와 같은 데이터를 요청 본문(Body)에 담아 전송하는 것이 보안상 더 좋으며, GET 요청은 캐싱될 수 있으므로 실시간 검색 결과에 적합하지 않다.","GET 요청: GET 요청은 서버의 상태를 변경하지 않는 안전(Safe)한 메서드이며, 캐싱이 가능하도록 설계되어 서버 부하를 줄이는 데 가장 유리하다.","POST 요청: 검색 요청은 사용자 행위(Action)를 유발하므로 POST를 사용해야 하며, 캐싱을 막기 위해 헤더에 별도 설정을 추가하면 된다.","GET 요청: 검색 결과는 민감한 데이터가 포함될 수 있으므로 POST를 쓰는 것이 원칙이나, URL의 길이 제한 문제로 인해 GET을 사용하는 것이 일반적이다.","GET 요청: 검색 결과는 민감한 데이터가 포함될 수 있으므로 POST를 쓰는 것이 원칙이나, URL의 길이 제한 문제로 인해 GET을 사용하는 것이 일반적이다.",/images/id-ngk6s3eow.png,0,2025-10-02,2025-10-02,2025-10-02,"GET 요청은 안전성을 보장하고 멱등성(Idempotence)을 가지기 때문에 (같은 요청을 여러 번 해도 결과가 같음), 웹 브라우저, 프록시 서버 등이 해당 응답을 캐시(Cache)할 수 있음.

POST 요청은 기본적으로 서버의 상태를 변경하는 목적으로 사용되므로, 서버 상태를 변경할 잠재적 위험을 내포하고있으며, 캐싱되지 않는 것이 원칙.",,"클라이언트 요청방식(get / post),에러 응답 코드"
다음은 웹 브라우저에서 서버로 요청을 보낼 때 GET 메서드와 POST 메서드의 특징에 대한 설명입니다. 이 중 가장 옳지 않은 것을 고르세요.,객관식,"GET 요청은 전송할 데이터를 URL의 쿼리 스트링에 포함시켜 전송하므로, 민감한 정보를 전송하는 데는 적합하지 않다.","POST 요청은 대용량 데이터를 전송할 때 유리하며, 전송할 데이터를 HTTP 요청 본문(Body)에 담아 보낸다.","GET 요청은 주로 리소스(정보)를 조회하거나 요청할 때 사용되며, 브라우저에서 '뒤로 가기' 버튼을 눌러도 일반적으로 문제가 발생하지 않는다.","POST 요청은 주로 서버의 리소스를 수정하거나 생성할 때 사용되며, 브라우저에서 새로고침(F5)을 하면 경고 메시지 없이 자동으로 요청이 반복된다.","POST 요청은 주로 서버의 리소스를 수정하거나 생성할 때 사용되며, 브라우저에서 새로고침(F5)을 하면 경고 메시지 없이 자동으로 요청이 반복된다.",,0,2025-10-02,2025-10-02,2025-10-02,"POST 요청이 비멱등성(Non-Idempotent)을 가지기 때문에 (즉, 요청을 여러 번 보내면 결과가 계속 달라지기 때문에), 브라우저는 새로고침 시 데이터 재전송을 막는 경고를 띄움",,"클라이언트 요청방식(get / post),에러 응답 코드"
"클라이언트가 이 SimpleServlet의 URL로 POST 요청을 보냈을 때 (예: <form method=""post""> 전송), 클라이언트가 받게 될 HTTP 상태 코드와 그 이유로 가장 정확한 것은 무엇일까요?",객관식,400 Bad Request - 요청 본문(Body)이 비어 있거나 형식이 잘못되어 서버가 요청 자체를 이해하지 못했기 때문에.,404 Not Found - 서블릿 컨테이너가 doPost()를 찾으려 시도했지만 서블릿 내에 구현된 메서드가 없어 URL에 대한 리소스를 찾지 못했기 때문에.,"405 Method Not Allowed - 서블릿이 service()를 오버라이드했지만, POST 요청을 처리할 doPost() 메서드나, 또는 service() 내에 POST 요청을 처리하는 로직을 명시적으로 구현하지 않았기 때문에.",500 Internal Server Error - service()가 빈 상태로 종료되어 서블릿 컨테이너가 응답을 생성하는 과정에서 내부적으로 심각한 오류가 발생했기 때문에.,"405 Method Not Allowed - 서블릿이 service()를 오버라이드했지만, POST 요청을 처리할 doPost() 메서드나, 또는 service() 내에 POST 요청을 처리하는 로직을 명시적으로 구현하지 않았기 때문에.",/images/id-4ouq5ub2y.png,0,2025-10-02,2025-10-02,2025-10-02,"서블릿 컨테이너(예: Tomcat)는 서블릿이 응답(resp)을 커밋하지 않고 종료되면, ""이 서블릿이 이 요청을 처리할 의도가 없었다""고 판단합니다. 특히 HttpServlet의 상위 클래스에서는 오버라이드되지 않은 메서드에 대한 요청이 들어오면 405 에러를 반환하도록 설계되어 있습니다. 이 경우, service()가 빈 채로 종료되었기 때문에 컨테이너는 POST 요청을 처리할 적절한 로직(doPost()나 service() 내부 로직)이 없다고 판단하고 최종적으로 405 Method Not Allowed를 반환",,"클라이언트 요청방식(get / post),에러 응답 코드"
위 JSP코드에서 <a href> 태그를 클릭했을 때 발생하는 요청에 대한 설명으로 틀린 것은?,객관식," <a href> 태그는 항상 GET요청을 발생시킨다.","<a href=""detail.jsp?id=10""> URL에 ?id=10 쿼리파라미터를 붙여 전송한다.","<a href=""delete?id=10"">와 같은 GET요청은 서버 상태를 변경 할 수 있어 보안 상 적절하지 않다.","<a href> 태그에 method=""post"" 속성을 추가하면 post 요청을 보낼 수 있다.","<a href> 태그에 method=""post"" 속성을 추가하면 post 요청을 보낼 수 있다.",/images/id-017ixvl6t.png,0,2025-10-02,2025-10-02,2025-10-02,a 태그는 method 속성을 지원하지 않는다.,,"클라이언트 요청방식(get / post),에러 응답 코드"
회원가입 폼에서 비밀번호같은 민감한 데이터를 서버로 전송할 때는 GET과 POST중 어떤 방식을 사용하는 것이 적절한가?,주관식,,,,,POST,,0,2025-10-02,2025-10-02,2025-10-02,,,"클라이언트 요청방식(get / post),에러 응답 코드"
"HTTP의 GET과 POST 요청 및 서블릿의 doGet/doPost처리에 대한 설명으로 옳지 않은 것은? ",객관식,GET 요청은 URL 쿼리스트링으로 전달된다.,GET방식은 URL에 데이터가 보이지 않아 보안성이 높다.,"POST요청을 처리할 doPost() 메서드를 구현하지 않을 경우, 해당 URL 로 POST요청하면 405 에러가 발생한다.",POST 요청은 URL에 데이터가 노출되지 않는다.,GET방식은 URL에 데이터가 보이지 않아 보안성이 높다.,,0,2025-10-02,2025-10-02,2025-10-02,,,"클라이언트 요청방식(get / post),에러 응답 코드"
위 코드에서 post요청을 보냈을 때 일어날 수 있는 에러 코드를 말하고 설명하시오 (doPost는 오버라이드되지않음),주관식,,,,,405,/images/id-34zmgh5v9.png,0,2025-10-02,2025-10-02,2025-10-02,405 Method Not Allowed로 해당 HTTP메서드가 허용되지 않을 때 발생한다.,,"클라이언트 요청방식(get / post),에러 응답 코드"
${ loginUser.name} 은 무엇을 출력하나요?,객관식,loginUser 변수의 name 필드 값,loginUser 객체의 getName() 메서드 호출 결과,둘 다 맞음,둘 다 틀림,둘 다 맞음,/images/id-v3p3bde7k.png,0,2025-10-02,2025-10-02,2025-10-02,"사용자 관점: name필드의 값을 가져온다.
실제 동작: getName() 메서드를 호출한다.",,EL
다음 이미지 조건문의 의미를 설명하세요.,객관식,loginUser가 null일 때,loginUser가 빈 문자열일 때,loginUser가 존재하고 비어있지 않을 때,loginUser가 존재하지 않을 때,loginUser가 존재하고 비어있지 않을 때,/images/id-m94ubj5b2.png,0,2025-10-02,2025-10-02,2025-10-02,"empty는 EL의 특수 연산자로,
값이 null, 빈 문자열, 빈 배열, 빈 컬렉션, 빈 Map 경우에 true를 반환한다.",,JSTL
다음 이미지 코드의 역할을 설명해주세요.,객관식,프로젝트의 루트 경로를 저장해서 재사용하기 위해,서버의 절대 경로를 저장하기 위해,데이터베이스 연결 경로를 저장하기 위해,사용자 홈 디렉토리를 저장하기 위해,프로젝트의 루트 경로를 저장해서 재사용하기 위해,/images/id-n8fcz3gc4.png,0,2025-10-02,2025-10-02,2025-10-02,"현재 웹 애플리케이션의 컨텍스트 경로(루트 경로)를 가져온다.
프로젝트명이 myapp이면 → /myapp
루트에 배포했으면 → `` (빈 문자열)",,JSTL
리스트나 배열의 모든 요소를 반복하여 출력할 때 사용하는 JSTL 태그는?,객관식,<c:for>,"<c:loop>
",<c:forEach>,<c:repeat>,<c:forEach>,/images/id-84zwbieb3.png,0,2025-10-02,2025-10-02,2025-10-02,<c:forEach> 태그 외에 다른 태그들은 없는 태그입니다.,,JSTL
다음 이미지 코드의 출력 결과를 쓰세요.,객관식,A등급,B등급,C등급,D등급,C등급,/images/id-5m5v0td4n.png,0,2025-10-02,2025-10-02,2025-10-02,순서대로 조건을 검사하기 때문에 첫 번째로 참인 조건을 만나면 즉시 실행하고 종료한다.,,JSTL
"""변수를 생성하거나 값을 설정할 때 사용하는 태그"" 에 해당하는 JSTL 태그는?",객관식,<c:out>,<c:set>,<c:var>,<c:value>,<c:set>,,0,2025-10-02,2025-10-02,2025-10-02,"<c:out> 값을 출력할  때 사용, c:var, c:value는 없는 태그입니다.",,JSTL
다음 JSTL 코드의 출력 결과를 쓰세요,주관식,,,,,12000,/images/id-it5b7r10y.png,0,2025-10-02,2025-10-02,2025-10-02,"<c:set>은 변수를 생성/설정하는 태그이다.
EL ${ }에서 JSTL로 설정한 변수를 바로 사용 가능하며, EL은 사칙연산을 지원한다.",,JSTL
다음 중 JSTL Core 라이브러리의 prefix로 올바른 것은? (관례),객관식,jstl,core,c,tag,c,,0,2025-10-02,2025-10-02,2025-10-02,"JSTL Core 라이브러리를 사용할 때 prefix는 이론적으로 자유롭게 지정 가능하다.
관례적으로 c를 사용한다.",,JSTL
다음 설명 중 올바른 설명 1개를 고르세요. (EL),객관식,EL은 scope를 명시하지 않으면 application 부터 검색한다.,"page scope는 가장 넓은 범위로, 웹 애플리케이션 전체에서 사용된다.",request scope에서 값을 찾으면 session도 계속 검색한다,EL은 좁은 범위부터 넓은 범위 순서로 검색한다.,EL은 좁은 범위부터 넓은 범위 순서로 검색한다.,,0,2025-10-02,2025-10-02,2025-10-02,,,EL
"EL에서 ${변수명}처럼 scope를 명시하지 않았을 때, 자동으로 검색하는 순서를 좁은 범위부터 순서대로 나열하세요.",주관식,,,,,"page, request, session, application",/images/id-8swr6fphd.png,0,2025-10-02,2025-10-02,2025-10-02,page -> request -> session -> application,,EL
이미지 JSP 코드의 빈칸을 채워주세요.,주관식,,,,,"홍길동, ${sessionScope.user}, ${applicationScope.user}",/images/id-015ymudzt.png,0,2025-10-02,2025-10-02,2025-10-02,"scope 명시 없음 -> 자동 검색(좁은 범위부터)
scope 명시함 -> 해당 영역만 검색",,EL
다음 Servlet 코드가 있습니다. 사진을 보고 답을 입력하고 이유를 따로 정리해보세요.(설명참고),주관식,,,,,김철수,/images/id-6nlwvh84r.png,0,2025-10-02,2025-10-02,2025-10-02,"EL은 scope를 명시하지 않으면 page -> request -> session -> application 순서로 검색,
request scope에서 ""name""을 먼저 찾았기 때문이다.",,EL
다음 Servlet 코드가 있습니다. JSP에서 ${price}를 출력하면 결과는?,객관식,null,에러 발생,"빈 문자열 ("""")",15000,"빈 문자열 ("""")",/images/id-4u8afird2.png,0,2025-10-02,2025-10-02,2025-10-02,"값이 없을 경우 null이 아닌 공백으로 표시,
15000을 정답으로 했다면 스코프 순서 숙지 필요!",,EL
JSP에서 이 데이터를 EL로 출력하려고 합니다. 빈칸을 채워보세요.,주관식,,,,,"${username}, ${age}",/images/id-59276gtbe.png,0,2025-10-02,2025-10-02,2025-10-02,EL은 setAttribute()로 저장한 속성명을 정확히 써야 한다!,,EL
다음 코드를 올바르게 수정하시오.,주관식,,,,,"HttpSession session = request.getSession();
session.setAttribute(""user"", ""hong"");",/images/id-4ux5mgsho.png,0,2025-10-02,2025-10-02,2025-10-02,request.setAttribute() 는 요청 단위 저장이므로 요청이 끝나면 사라져 유지되지 않음.,,"Cookie,Session"
invalidate() 호출 시 어떤 일이 일어나는지 설명하시오.,주관식,,,,,해당 클라이언트 세션 삭제,,0,2025-10-02,2025-10-02,2025-10-02,,,"Cookie,Session"
HttpSession 객체의 메서드 중 존재하지 않는 것은?,객관식,"setAttribute(String name, Object value)",getAttribute(String name),removeAttribute(String name),"setCookie(String name, String value)","setCookie(String name, String value)",,0,2025-10-02,2025-10-02,2025-10-02,HttpSession에는 setCookie() 메서드가 존재하지 않습니다.,,"Cookie,Session"
세션 관리에 쿠키가 필요한 이유를 한 줄로 설명하시오.,주관식,,,,,세션을 식별하기 위해 브라우저가 JSESSIONID 쿠키를 서버로 전송해야 하기 때문.,,0,2025-10-02,2025-10-02,2025-10-02,,,"Cookie,Session"
쿠키와 세션의 장점과 단점을 하나씩 쓰시오.,주관식,,,,,"쿠키 장점: 서버 자원 소모가 적다, 단순하다.
쿠키 단점: 보안 취약(XSS/도청 시 탈취 가능), 용량/개수 제한.
세션 장점: 서버에 보관하므로 비교적 안전, 많은 데이터 저장 가능.
세션 단점: 서버 메모리/리소스 소모, 클라이언트 수 많아지면 부담.",,0,2025-10-02,2025-10-02,2025-10-02,,,"Cookie,Session"
쿠키와 세션에 대한 설명 중 옳지 않은 것은?,객관식,쿠키는 클라이언트(브라우저)에 저장된다.,세션은 서버에 저장되며 클라이언트는 세션 ID를 쿠키로 전달한다.,쿠키는 클라이언트가 삭제하기 전까지 무조건 영구히 유지된다.,세션은 서버 자원을 사용하므로 일정 시간(타임아웃)이 지나면 소멸된다.,쿠키는 클라이언트가 삭제하기 전까지 무조건 영구히 유지된다.,,0,2025-10-02,2025-10-02,2025-10-02,,,"Cookie,Session"
다음 코드의 실행 결과로 옳은 것은?,객관식,"세션에 ""user""라는 이름으로 ""admin"" 값이 저장된다.","쿠키에 ""user=admin""가 저장된다.",DB에 사용자 정보가 저장된다.,에러가 발생한다.,"세션에 ""user""라는 이름으로 ""admin"" 값이 저장된다.",/images/id-8zc5dk1nb.png,0,2025-10-02,2025-10-02,2025-10-02,setAttribute()는 세션 객체에 데이터를 저장한다. 쿠키와는 별개다.,,"Cookie,Session"
쿠키에서 “만료 시간(expiration)”을 설정하지 않으면 기본적으로 언제 삭제되는가?,객관식,서버 재부팅 시,브라우저 종료 시,하루 뒤,영구 저장,브라우저 종료 시,,0,2025-10-02,2025-10-02,2025-10-02,"만료 시간이 없는 쿠키는 “세션 쿠키”로, 브라우저 종료 시 삭제된다.",,"Cookie,Session"
쿠키와 달리 HttpSession이 가지는 장점은 무엇인가?,객관식,용량 제한이 없다,조작 위험이 적다,클라이언트에 저장된다,영구 저장이 가능하다,조작 위험이 적다,,0,2025-10-02,2025-10-02,2025-10-02,세션 데이터는 서버에 저장되므로 클라이언트 조작 위험이 줄어든다.,,"Cookie,Session"
세션이 유지되기 위해 클라이언트가 반드시 가지고 있어야 하는 것은?,객관식,사용자 정보 전체,비밀번호,세션 ID,암호화 키,세션 ID,,0,2025-10-02,2025-10-02,2025-10-02,"세션 자체 데이터는 서버에 있지만, 이를 식별하는 세션 ID는 클라이언트가 가지고 있어야 한다.",,"Cookie,Session"
"서버에 사용자 정보를 저장하고, 클라이언트는 ID만 전달하는 방식은?",객관식,HttpSession,Cookie,LocalStorage,Cache,HttpSession,,0,2025-10-02,2025-10-02,2025-10-02,"세션은 서버에 데이터가 저장되며, 클라이언트는 세션 ID만 전달한다.",,"Cookie,Session"
"JSP에서 `if`, `for`, `while` 등의 자바 제어문을 사용하거나, 단순히 서버 측에서 실행될 자바 코드(값을 출력하지 않는)를 작성할 때 사용하는 스크립팅 요소는 무엇입니까?",객관식,"<% ... %> ","
<%= ... %>","
<%! ... %>",<%-- ... --%>,"<% ... %> ",,0,2025-10-02,2025-10-02,2025-10-02,"스크립트릿은 JSP의 주요 자바 코드 블록이며, 자바의 제어문이나 로직을 구현하는 데 사용됩니다.",,Servlet & jsp
"JSP 내장 객체 중 웹 애플리케이션의 시작부터 종료까지 서버 내에서 영구적으로 유지되며, 모든 사용자가 공유하는 애플리케이션 전역 정보를 저장하는 객체는 무엇입니까?",객관식,request,application,page,session,application,,0,2025-10-02,2025-10-02,2025-10-02,"application 객체는 ServletContext에 매핑되며, 애플리케이션 전역 스코프를 가집니다.",,Servlet & jsp
특정 경로에 대한 모든 요청이 서블릿에 도달하기 전에 공통적인 인증 및 인코딩 작업을 수행해야 합니다. 이 요구사항을 가장 효율적이고 구조적으로 처리할 수 있도록 도와주는 서블릿/JSP 기술 요소는 무엇입니까?,객관식,HttpServletResponse,JSP Page Directive (`<%@ page %>`),Servlet Filter,ServletContextListener,Servlet Filter,,0,2025-10-02,2025-10-02,2025-10-02,"필터는 요청(Request)과 응답(Response)이 서블릿에 도달하거나 서블릿을 떠나기 전에 가로채어 공통적인 전/후처리(로깅, 인코딩, 인증 등)를 수행하도록 설계되었습니다.",,Servlet & jsp
"클라이언트가 /old-page로 요청했을 때, 서버 내부에서 RequestDispatcher.forward(""/new-page"", request, response)를 사용하여 페이지를 이동시키는 방식에 대한 설명으로 옳은 것은 무엇입니까?",객관식,"클라이언트의 주소창은 `/old-page`로 유지되며, `/old-page`가 `/new-page`의 응답 결과를 클라이언트에게 대신 전달한다.",클라이언트에게는 HTTP 상태 코드 302(Found)와 함께 `/new-page`로의 재요청 명령이 전달된다.,"
클라이언트의 웹 브라우저 주소창은 `/new-page`로 변경되지만, 요청 객체는 유지되지 않는다.",서버 내부에서 `/old-page`에 대한 응답 스트림이 완료된 후 `/new-page`의 응답 스트림을 새로 연다.,"클라이언트의 주소창은 `/old-page`로 유지되며, `/old-page`가 `/new-page`의 응답 결과를 클라이언트에게 대신 전달한다.",,0,2025-10-02,2025-10-02,2025-10-02,"Forward는 서버 내부에서 요청과 응답 객체를 유지한 채 제어를 넘기며, 클라이언트는 이 과정을 알지 못합니다.",,Servlet & jsp
"JSP의 9가지 내장 객체 중, 해당 JSP 페이지가 에러 처리 페이지로 설정되었을 때(isErrorPage=""true"")만 유효하게 사용할 수 있는 객체는 무엇입니까?",객관식,exception,application,pageContext,config,exception,,0,2025-10-02,2025-10-02,2025-10-02,"에러 페이지로 설정된 경우, 발생한 예외 객체를 `java.lang.Throwable` 타입으로 접근할 수 있도록 제공하는 객체입니다.",,Servlet & jsp
"서블릿 필터(Filter)의 doFilter() 메서드 내에서 chain.doFilter(request, response) 호출을 생략했을 때 발생하는 결과는 무엇입니까?",객관식,"필터 체인의 나머지 필터는 실행되지만, 최종 대상 서블릿/JSP는 실행되지 않습니다.",자동으로 HTTP 상태 코드 404 (Not Found) 응답이 반환됩니다.,다음 필터 또는 최종 대상 서블릿/JSP로 요청이 전달되지 않고 필터에서 응답 처리가 종료됩니다.,JVM의 스택 오버플로우 오류가 발생하여 서버가 다운됩니다.,다음 필터 또는 최종 대상 서블릿/JSP로 요청이 전달되지 않고 필터에서 응답 처리가 종료됩니다.,,0,2025-10-02,2025-10-02,2025-10-02,"`chain.doFilter()` 호출을 생략하면 현재 필터에서 요청 처리가 멈추게 되고, 필터가 직접 응답을 보내거나 응답 처리를 종료해야 합니다.",,Servlet & jsp
"다음과 같이 web.xml에 서블릿 매핑이 정의되어 있을 때, URL /app/mypage.do 요청을 처리하는 서블릿은 무엇입니까?  1. /app/* -> ServletA 2. *.do -> ServletB 3. /app/mypage.do -> ServletC",객관식,ServletB,ServletA,요청 처리를 위한 서블릿을 찾을 수 없습니다.,ServletC,ServletC,,0,2025-10-02,2025-10-02,2025-10-02,서블릿 매핑 규칙에서 가장 높은 우선순위는 **정확한 경로 매핑**입니다. `/app/mypage.do`는 가장 정확하게 일치하는 패턴입니다.,,Servlet & jsp
"서블릿 컨테이너가 서블릿의 service() 메서드를 호출할 때, 각 요청마다 새로운 HttpServletRequest 객체를 생성하는 주된 이유와 가장 거리가 먼 것은 무엇입니까?",객관식,`service()` 메서드의 응답 결과를 즉시 클라이언트에게 반환하기 위해.,요청별로 필요한 속성(Attribute)을 독립적으로 저장 및 전달하기 위해.,각 요청에 대한 클라이언트의 입력 데이터를 격리하기 위해.,요청 정보에 대한 스레드 안전성(Thread Safety)을 보장하기 위해.,`service()` 메서드의 응답 결과를 즉시 클라이언트에게 반환하기 위해.,,0,2025-10-02,2025-10-02,2025-10-02,"응답을 반환하는 것은 `HttpServletResponse` 객체와 컨테이너의 역할이며, 요청 객체와 직접적인 관련이 없습니다. 응답의 즉각적인 반환은 멀티스레딩 구조가 아닌 요청 객체와는 무관합니다.",,Servlet & jsp
Servlet의 생명주기 메서드를 올바른 순서대로 나열한 것은?,객관식,init() → service() → destroy(),service() → init() → destroy(),destroy() → service() → init(),init() → destroy() → service(),init() → service() → destroy(),,0,2025-09-19,2025-10-02,2025-09-19,i,,Servlet
다음 중 동적 요청에 해당하는 것은 무엇인가?,객관식,"HTML, CSS, JS 파일 불러오기",로그인 시 입력한 아이디와 비밀번호 검증,서버에 저장된 이미지 파일 보여주기,정적 index.html 페이지 요청,로그인 시 입력한 아이디와 비밀번호 검증,,0,2025-09-19,2025-10-02,2025-09-19,정적 리소스 제공은 웹 서버가 하는 역할.,,백엔드 프로그래밍